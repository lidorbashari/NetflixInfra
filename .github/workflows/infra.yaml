name: Deploy Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose environment'
        required: true
        type: choice
        options:
          - dev
          - prod
      region:
        description: 'AWS region'
        required: true
        type: choice
        options:
          - eu-north-1
          - eu-west-1

jobs:
  infra_terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.region }}

      - name: Create tfvars file for prod
        if: ${{ github.event.inputs.environment == 'prod' }}
        run: |
          echo "env = \"prod\"" > region.${{ github.event.inputs.region }}.prod.tfvars
          echo "region = \"${{ github.event.inputs.region }}\"" >> region.${{ github.event.inputs.region }}.prod.tfvars
          echo "ami_id = \"${{ secrets.AMI_ID_PROD }}\"" >> region.${{ github.event.inputs.region }}.prod.tfvars
        working-directory: ./tf

      - name: Create tfvars file for dev
        if: ${{ github.event.inputs.environment == 'dev' }}
        run: |
          echo "env = \"dev\"" > region.${{ github.event.inputs.region }}.dev.tfvars
          echo "region = \"${{ github.event.inputs.region }}\"" >> region.${{ github.event.inputs.region }}.dev.tfvars
          echo "ami_id = \"${{ secrets.AMI_ID_DEV }}\"" >> region.${{ github.event.inputs.region }}.dev.tfvars
        working-directory: ./tf

      - name: Terraform Init
        run: terraform init
        working-directory: ./tf

      - name: Terraform workspace
        run: |
          WORKSPACE_NAME="${{ github.event.inputs.region }}.${{ github.event.inputs.environment }}"
          if terraform workspace list | grep -q "$WORKSPACE_NAME"; then
            terraform workspace select $WORKSPACE_NAME
          else
            terraform workspace new $WORKSPACE_NAME
          fi
        working-directory: ./tf

      - name: Terraform Plan
        run: TF_LOG=DEBUG terraform plan -var-file=region.${{ github.event.inputs.region }}.${{ github.event.inputs.environment }}.tfvars
        working-directory: ./tf

      - name: Terraform Plan Check
        run: terraform validate
        working-directory: ./tf

      - name: Terraform Apply
        run: TF_LOG=DEBUG terraform apply -auto-approve -var-file=region.${{ github.event.inputs.region }}.${{ github.event.inputs.environment }}.tfvars
        working-directory: ./tf
