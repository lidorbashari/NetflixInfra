name: Deploy Polybot Helm Chart

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "choose environment"
        required: true
        type: choice
        options:
          - prod
          - dev
      region:
        description: "choose region"
        required: true
        type: choice
        options:
          - us-east-2
          - eu-north-1

jobs:
  deploy_polybot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install AWS CLI and JQ
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip jq
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install --update
          aws --version

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.region }}

      - name: Download tfstate for workspace and region
        run: |
          aws s3 cp s3://lidor-project-bucket-tf/env:/${{ github.event.inputs.region }}/tfstate.json tfstate.json

      - name: Extract Terraform Outputs
        id: extract
        run: |
          CONTROL_PLANE_IP=$(jq -r '.outputs.control_plane_public_ip.value' tfstate.json)
          SQS_ARN=$(jq -r '.outputs.sqs_arn.value' tfstate.json)
          BUCKET_NAME=$(jq -r '.outputs.s3_name.value' tfstate.json)
          echo "CONTROL_PLANE_IP=$CONTROL_PLANE_IP" >> $GITHUB_ENV
          echo "SQS_ARN=$SQS_ARN" >> $GITHUB_ENV
          echo "BUCKET_NAME=$BUCKET_NAME" >> $GITHUB_ENV

      - name: Add SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/lidorbashkey.pem
          chmod 600 ~/.ssh/lidorbashkey.pem

      - name: Deploy Helm Chart on Control Plane
        run: |
          ssh -i ~/.ssh/lidorbashkey.pem -o StrictHostKeyChecking=no ubuntu@${{ env.CONTROL_PLANE_IP }} <<EOF
            cd /home/ubuntu
            if [ ! -d NetflixInfra ]; then
              git clone https://github.com/lidorbashari/NetflixInfra.git
            fi
            cd NetflixInfra/tf/helm/polybot
            helm upgrade --install polybot . \
              --set secrets.aws_access_key_id="${{ secrets.AWS_ACCESS_KEY_ID }}" \
              --set secrets.aws_secret_access_key="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
              --set env.SQS_URL="${{ env.SQS_ARN }}" \
              --set env.AWS_DEFAULT_REGION="${{ github.event.inputs.region }}"
          EOF
            cd NetflixInfra/tf/helm/yolo
            helm helm upgrade --install yolo . \
            --set secrets.aws_access_key_id="${{ secrets.AWS_ACCESS_KEY_ID }}" \
            --set secrets.aws_secret_access_key="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            --set env.BUCKET_NAME="${{ env.BUCKET_NAME }}" \
            --set env.SQS_QUEUE_NAME="lidor_k8s_queue_project" \
            --set env.AWS_DEFAULT_REGION="${{ github.event.inputs.region }}"
          EOF